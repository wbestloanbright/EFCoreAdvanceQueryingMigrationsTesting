@{
    ViewData["Title"] = "Contact Entry";
}
@model Contacts.Person


    <h2>@ViewData["Title"]</h2>
    <div>

        <form>
            <div class="form-horizontal">
                <h4>Edit</h4>
                <div class="text-danger"></div>
                <div class="form-group">
                    <label class="col-md-2 control-label" for="FirstName">First Name</label>
                    <div class="col-md-10">
                        <input class="form-control" type="text"
                               data-val="true"
                               data-val-required="First name is required."
                               data-val-maxlength="First name too long."
                               data-val-maxlength-max="40"
                               id="FirstName" name="FirstName" value="" />
                        <span class="text-danger field-validation-valid"
                              data-valmsg-for="FirstName" data-valmsg-replace="true"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-2 control-label" asp-for="LastName">Last Name</label>
                    <div class="col-md-10">
                        <input asp-for="LastName" class="form-control"/>
                        <span class="text-danger field-validation-valid"
                              asp-validation-for="LastName"></span>
                    </div>
                </div>
            </div>
        </form>
    </div>
    @section Scripts {
        @{Html.RenderPartial("_ValidationScriptsPartial.cshtml");}
        <script type="text/javascript">
            (function ($) {

                $.validator.addMethod('invalidname', function (value, element, param) {
                    if (!value) return false;
                    var invalidName = param['compare-to-name'];

                    if (value.toString().toLowerCase().indexOf(invalidName.toLowerCase()) >= 0) {
                        return false;
                    }
                    return true;
                });


                $.validator.unobtrusive.adapters.add(
                    'invalidname',
                    ['compare-to-name'],
                    function (options) {

                        var params = {
                            'compare-to-name': options.params['compare-to-name']
                        };

                        options.rules['invalidname'] = params;
                        if (options.message) {
                            options.messages['invalidname'] = options.message;
                        }

                    });
            }(jQuery));

        </script>
    }